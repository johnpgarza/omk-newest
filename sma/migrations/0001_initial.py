# Generated by Django 3.0.4 on 2020-04-25 10:59

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('nickname', models.CharField(max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('role', models.CharField(choices=[('staff', 'Staff'), ('mentor', 'Mentor')], max_length=50)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_mentor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_num', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_first_name', models.CharField(max_length=100)),
                ('mentor_middle_name', models.CharField(blank=True, max_length=100)),
                ('mentor_last_name', models.CharField(max_length=100)),
                ('mentor_email', models.EmailField(max_length=100)),
                ('mentor_address', models.CharField(max_length=200)),
                ('mentor_city', models.CharField(max_length=50)),
                ('mentor_state', models.CharField(max_length=50)),
                ('mentor_zip', models.CharField(max_length=10)),
                ('mentor_phone', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=100)),
                ('school_address', models.CharField(max_length=200)),
                ('school_city', models.CharField(max_length=50)),
                ('school_state', models.CharField(max_length=50)),
                ('school_zip', models.CharField(max_length=10)),
                ('school_email', models.EmailField(max_length=100)),
                ('school_phone', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student_Group_Mentor_Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sma.Grade')),
                ('mentor', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sma.Mentor')),
                ('school', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sma.School')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_first_name', models.CharField(max_length=100)),
                ('student_middle_name', models.CharField(blank=True, max_length=100)),
                ('student_last_name', models.CharField(max_length=100)),
                ('student_gender', models.CharField(max_length=100)),
                ('student_dateofbirth', models.DateTimeField(max_length=50)),
                ('student_email', models.EmailField(max_length=100)),
                ('student_address', models.CharField(max_length=200)),
                ('student_city', models.CharField(max_length=50)),
                ('student_state', models.CharField(max_length=50)),
                ('student_zip', models.CharField(max_length=10)),
                ('student_phone', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sma.Grade')),
                ('school', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sma.School')),
            ],
        ),
        migrations.CreateModel(
            name='Session_Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(default='', max_length=50)),
                ('session_location', models.CharField(max_length=50)),
                ('session_start_date', models.DateTimeField(max_length=20)),
                ('session_end_date', models.DateTimeField(max_length=20)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Student_Group_Mentor_Assignment')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Mentor')),
            ],
        ),
        migrations.CreateModel(
            name='remark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark_notes', models.CharField(max_length=500)),
                ('remark_mentor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('remark_session_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Session_Schedule')),
                ('remark_student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late')], default='Present', max_length=50)),
                ('attendance_ID', models.CharField(max_length=100)),
                ('attendance_grade_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Grade')),
                ('attendance_mentor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Mentor')),
                ('attendance_session_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Session_Schedule')),
                ('attendance_student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sma.Student')),
            ],
        ),
    ]
